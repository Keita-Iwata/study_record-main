name: Deploy to Firebase Hosting

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Run build and log output
        run: |
          npm run build
        continue-on-error: true

      - name: Output root directory contents for debugging
        run: ls -la ${{ github.workspace }}

      - name: Output build directory contents for debugging
        run: ls -la ${{ github.workspace }}/dist
        continue-on-error: true

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js and cache
        uses: actions/setup-node@v2
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install firebase-tools
        run: npm install -g firebase-tools

      - name: Decode Firebase service account key
        run: |
          echo "${{ secrets.FIREBASE_KEY }}" | base64 -d > ${{ github.workspace }}/firebase-key.json
          echo "GOOGLE_APPLICATION_CREDENTIALS=${{ github.workspace }}/firebase-key.json" >> $GITHUB_ENV

      - name: Verify build output before deploy
        run: ls -la ${{ github.workspace }}/dist

      - name: Deploy to Firebase Hosting
        run: firebase deploy --only hosting --project ${{ secrets.FIREBASE_PROJECT_ID }}
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ github.workspace }}/firebase-key.json

      - name: Delete GOOGLE_APPLICATION_CREDENTIALS
        run: rm $GOOGLE_APPLICATION_CREDENTIALS
        if: ${{ always() }}
